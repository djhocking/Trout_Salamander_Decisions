# salamander elicitation model
# created by Rachel Katz Feb 01 2016

############## elicitation model description ##############
# Elicite model beliefs and parameter values with uncertainty from experts for predicting
# occupancy probabilities (catchment-level) of three stream-salamander species with 
# current ranges into the northeastern US. Use this model to forecast current distributions
# of salamanders and compare to exisiting distributions.
# Step 1: build the model: identify parameters & hypotheses for salamander occupancy (build on exisiting Hocking NE trout model)
# Step 2: include expected values and confidence of experts (mean and precision). precision values may have variable confidences (i.e., 1SD or2SD, 95% or 80% confidence)
# Step 3: elicit experts and compare expert opinions (where is it most variable?) (build an web-based survey?)
# Step 4: simulate salamander distributions based on simulated means (while waiting for elicitation results) 
# Step 5: predict distributions based on mean expert opinions
# Step 6: conduct sensititivly analysis for each paramater (hold all constant at the mean and vary one parmaeter at a time_


############## uncertainty description ##############
# response variable: species-specific [s] probability of occupancy [pr.occ] at the catchment-level [i] under climate-temp model uncertainty [ctm]
# pr.occ[s,i,ctm,fish]

# three salamander species: 
# s[1:3]
# species 1 = G. porphyriticus; spring salamander
# species 2 = D. fuscus; dusky salamander
# species 3 = E. bislineata; two-lined salamander

# four temperature climate models:
# ctm[1:4]
# 4 alterantive climate futures (0, 2, 4, 6 C degree increase in catchment mean july stream temperature)
# 4 alterantive climate futures (0, 2, 4, 6 degree increase in catchment maximum annual temperature?)
# assume constant change in temperature across catchments? (no spatial variablity?)
# climate model beliefs uncertainty = elicit climate-temp model weights (i.e., ctm1=0.10, ctm2=0.40, ctm3=0.40, ctm4=0.10, sum=1)

# streamflow climate models:
# cfm[1:X]
# X alterantive flow (lower rainfall, same rainfall, higher rainfall?)
# assume constant change in rainfall across catchments? (rainfall*area = discharge)
# climate model beliefs uncertainty = elicit climate-flow model weights (i.e., sum=1)

# three fish-salamander interactions hypothesess:
# fish[1:3]
# three fish-salamander hypothesis: no-interaction, negative-interaction, positive-interaction

# local vs. upstream hypothese (beta's):
# catch[1:2]
# two hypotheses: upstream landuse affects catchment occupancy, local landuse affects catchment occupancy

# buffer vs. catchment-forest hypotheses (beta's):
# buff[1:2]
# two hypotheses: forest buffer affects catchment occupancy, forest anywhere in catchment affects catchment occupancy

# buff*catch interactive hypotheses?
# upstream forest buffer
# local-catchment forest buffer
# upstream catchment (non-buffer) forest
# local-catchment forest (non-buffer)

# regional intercept (base-line occupancy) differences
# region[1:8]
# 8 regions (binary, intercept effect)
# Appalachian Plateaus, Valley and Ridge Province, Blue Ridge Province, Piedmont Province, Coastal Plain, New England, Adirondack Province, Interior Low Plateaus

# hyper parameters: random effect of species, location, etc?
# elicit mean and variance in random effects from experts (not centered on 0 with wide intervals); see Martin et al. 2005 EcoApps.
# shift in mean occupancy defined for each species (species is a hyper parameter?)
# shift in mean occupancy defined for each region (region is a hyper parameter?)

############## salamander model description ##############

pr.occ[s,i]<- logit(B0.int + B1.temp*temp[i]

# expected overall average based on physiographic province (fixed effect)
B0[0:8] ~ dnorm(B0.mean[0:8],B0.var[0:8])
B0.int <-
B0[0] + 
BO[1]*Appalachian Plateaus[i] + 
BO[2]*Valley and Ridge Province[i] + 
BO[3]*Blue Ridge Province[i] +
BO[4]*Piedmont Province[i] + 
BO[5]*Coastal Plain[i] + 
BO[6]*New England[i] + 
BO[7]*Adirondack Province[i] + 
BO[8]*Interior Low Plateaus[i]

B0.mean[0:8] <- log(mean.p[0:8]/(1-mean.p[0:8])
mean.p[0]<-expert.mean.p[0]
expert.mean.p[0]<-average(expert.p[0,1:X]) # average mean occupancy across experts
expert.var.p[0]<-variance(expert.p[0,1:X]) # average mean occupancy across experts





